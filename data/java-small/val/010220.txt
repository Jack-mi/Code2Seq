resizable|deque|test i,VDID0|VD|VDE|For|Bk|Ex|Cal0|Nm2,clear i,Nm0|Neq|If|Bk|For|Bk|Ex|Cal0|Nm0,q int,Prim0|VDE|For|Bk|Ex|Cal0|Eq|Fld0|Nm0,q <NUM>,IntEx1|Ls|For|Bk|For|PosInc|Nm0,i j,Nm1|Plus|Plus|Plus|Plus1|Cal|Nm3,assert|true q,VDID0|VD|VDE|Ex|Bk|Ex|Cal0|Eq|IntEx1,0 integer,Prim0|VDE|Ex|Bk|Ex|Cal0|Nm3,assert|true size,Nm1|Plus|Plus|Plus|Nm1,i (,StrEx1|Plus|Plus|Plus1|Cal|Eq|Nm0,size i,Nm0|Ls|For|Bk|For|VDE|Prim0,int int,Prim0|VDE|VD|IntEx1,0 int,Prim0|VDE|For|Bk|Ex|Cal0|Plus|Plus|Nm1,i <NUM>,IntEx1|Ls|For|PosInc|Nm0,i i,Nm1|Ls|For|VDE|VD|VDID0,j i,Nm0|Minus|Minus|Enc|Plus|Plus|Plus|Nm1,size last|thing|is|not|zero|but,StrEx0|Plus|Plus|Plus|Nm1,i q,Nm0|Fld|Eq2|Cal|Nm3,assert|true j,Nm2|Cal2|Nm3,equals i,Nm0|PosInc|For|Bk|For|VDE|Prim0,int 0,IntEx1|VD|VDE|For|Bk|For|VDE|Prim0,int q,Nm0|Fld|Nm2,size new|deque|is|not|empty,StrEx1|Cal|Ex|Bk|For|Bk|If|Neq|IntEx1,0 i,Nm0|PosInc|For|Bk|For|VDE|VD|IntEx1,0 not|empty|after|cycle,StrEx0|Plus1|Cal|Eq|Fld0|Nm2,size <NUM>,IntEx1|ObjEx|VD|VDE|Ex|Bk|For|Ls|Nm0,i int,Prim0|VDE|For|Bk|For|Bk|Ex|Cal0|Nm3,assert|true <NUM>,IntEx1|Ls|For|Bk|For|Bk|Ex|Cal0|IntEx2,<NUM> <NUM>,IntEx1|ObjEx|VD|VDE|Ex|Bk|For|PosInc|Nm0,i int,Prim0|VDE|For|Bk|For|Ls|Nm1,i int,Prim0|VDE|For|Bk|Try|Catch|Prm|VDID0,e METHOD_NAME,Nm2|Mth|Bk|For|Bk|For|Ls|Nm1,i i,VDID0|VD|VDE|For|PosInc|Nm0,i METHOD_NAME,Nm2|Mth|Bk|Ex|Cal0|Eq|Fld0|Nm0,q i,Nm0|Neq|If|Bk|Ex|Cal0|Eq|IntEx1,0 q,Nm0|Cal|Ex|Bk|Ex|Cal0|Eq|Fld0|Nm0,q peek,VDID0|VD|Cal1|Nm2,last void,Void1|Mth|Bk|For|Bk|For|VDE|VD|IntEx1,0 illegal|state|exception,Cls1|Prm|Catch|Bk|Ex|Cal0|Nm2,fail j,Nm0|Plus|Enc|Plus|Plus|Plus|Nm1,size void,Void1|Mth|Bk|For|Bk|For|Ls|Nm0,j i,VDID0|VD|VDE|For|Bk|Ex|Cal0|Nm0,q integer,Prim0|Cls|VDE|VD|VDID0,q ),StrEx1|Plus1|Cal|Ex|Bk|Ex|Cal0|Plus|StrEx1,) assert|true,Nm3|Cal|Ex|Bk|For|Bk|If|Neq|Nm0,i new|deque|is|not|empty,StrEx1|Cal|Ex|Bk|For|Bk|For|Ls|Nm1,i 0,IntEx1|VD|VDE|For|Bk|For|PosInc|Nm0,j new|deque|is|not|empty,StrEx1|Cal|Ex|Bk|For|PosInc|Nm0,i integer,Prim0|VDE|Ex|Bk|Ex|Cal0|Plus|Plus|Nm1,i assert|true,Nm3|Cal|Ex|Bk|For|Bk|For|PosInc|Nm0,j size|should|be,StrEx0|Plus|Plus|Plus|Plus|Plus|Nm1,i int,Prim0|VDE|For|PosInc|Nm0,i 0,IntEx1|Eq2|Cal|Ex|Bk|For|Ls|Nm0,i int,Prim0|VDE|For|Bk|For|Ls|Nm0,j 0,IntEx1|VD|VDE|For|Bk|Ex|Cal0|Nm0,q e,VDID0|Prm|Catch|Try|Bk|Ex|Cal0|Cal2|Nm2,j ),StrEx1|Plus1|Cal|Nm3,assert|true size,VDID0|VD|VDE|Ex|Bk|Ex|Cal0|Nm3,assert|true ),StrEx1|Plus1|Cal|Eq|Nm0,size int,Prim0|VDE|For|Bk|Ex|Cal0|Plus|StrEx1,) peeked,VDID0|VD|Cal1|Nm0,q j,Nm1|Plus|Plus|Plus|Plus|Plus|Nm1,i peeked,VDID0|VD|VDE|Ex|Bk|Ex|VDE|Prim0,int int,Prim0|VDE|Ex|Bk|For|Bk|For|PosInc|Nm0,j new|deque|is|not|empty,StrEx1|Cal|Ex|Bk|For|Ls|Nm0,i j,Nm0|Ls|For|Bk|Ex|Cal0|Plus|StrEx0,not|empty|after|cycle <NUM>,IntEx1|Ls|For|VDE|VD|VDID0,i integer,Prim0|VDE|Ex|Bk|Ex|Cal0|Nm3,assert|true int,Prim0|VDE|Ex|Bk|For|Bk|If|Neq|Nm0,i void,Void1|Mth|Bk|For|Bk|For|VDE|VD|VDID0,j size,VDID0|VD|VDE|Ex|Bk|Ex|Cal0|Plus|StrEx1,) peek,Nm0|Eq2|IntEx1,0 int,Prim0|VDE|For|Bk|For|VDE|VD|VDID0,i q,Nm0|Cal|Nm2,remove|last peek,VDID0|VD|VDE|Ex|Bk|Ex|Cal0|Nm3,assert|true integer,Prim0|VDE|VD|Cal1|Nm2,remove|last int,Prim0|VDE|For|Bk|For|Bk|Ex|Cal0|Nm3,assert|true void,Void1|Mth|Bk|Ex|Cal0|Nm2,clear void,Void1|Mth|Bk|For|Bk|For|VDE|VD|VDID0,j ),StrEx1|Plus1|Cal|Ex|Bk|Ex|VDE|VD|VDID0,size i,Nm0|PosInc|For|Bk|Ex|Cal0|Eq|Fld0|Nm0,q peeked,Nm1|Plus|Plus|StrEx1,should|be i,Nm0|Neq|If|Bk|Ex|VDE|Prim0,integer assert|true,Nm3|Cal|Ex|Bk|Ex|VDE|VD|Fld1|Nm2,size q,Nm0|Cal|Ex|Bk|Ex|Cal0|StrEx1,clear|did|not|clear|properly METHOD_NAME,Nm2|Mth|Bk|Ex|Cal0|Nm2,clear int,Prim0|VDE|VD|Fld1|Nm2,size int,Prim0|VDE|For|Bk|For|PosInc|Nm0,i integer,Prim0|VDE|Ex|Bk|Ex|Cal0|Cal2|Nm2,j j,Nm0|Ls|For|Bk|For|Bk|Ex|Cal0|Nm2,clear i,Nm0|Neq|If|Bk|Ex|Cal0|Plus|StrEx0,not|empty|after|cycle assert|true,Nm3|Cal|Ex|Bk|For|Bk|Ex|Cal0|Nm3,assert|true <NUM>,IntEx1|ObjEx|VD|VDE|Ex|Bk|Ex|Cal0|Nm3,assert|true i,Nm0|Ls|For|Bk|For|Bk|Ex|Cal0|Nm3,add|first 0,IntEx1|VD|VDE|For|Bk|For|Ls|Nm0,i new|deque|is|not|empty,StrEx1|Cal|Eq|IntEx1,0 but|is,StrEx1|Plus|Plus|Plus|Plus|Plus1|StrEx1,) i,Nm1|Plus|Plus1|Cal|Eq|Nm0,peek assert|true,Nm3|Cal|Ex|Bk|For|Bk|If|Neq|Nm0,i i,Nm0|Neq|If|Bk|For|Bk|For|Ls|IntEx1,<NUM> int,Prim0|VDE|For|Bk|For|Ls|IntEx1,<NUM> i,Nm0|Minus|IntEx1,1 new|deque|is|not|empty,StrEx1|Cal|Ex|Bk|For|Bk|For|PosInc|Nm0,j j,Nm1|Eq2|Cal|Ex|Bk|Ex|Cal0|Plus|StrEx1,) METHOD_NAME,Nm2|Mth|Bk|For|VDE|VD|VDID0,i int,Prim0|VDE|For|Bk|Ex|Cal0|Eq|Nm0,pop i,Nm0|PosInc|For|Bk|For|Ls|IntEx1,<NUM> j,Nm0|PosInc|For|Bk|Try|Catch|Prm|VDID0,e assert|true,Nm3|Cal|Ex|Bk|For|Bk|Ex|Cal0|Nm0,q METHOD_NAME,Nm2|Mth|Bk|For|PosInc|Nm0,i assert|true,Nm3|Cal|Ex|Bk|If|Bk|For|PosInc|Nm0,j popped|should|be,StrEx0|Plus|Nm1,j q,VDID0|VD|VDE|Ex|Bk|For|VDE|VD|IntEx1,0 q,Nm0|Cal|VD|VDE|Ex|Bk|Ex|Cal0|Nm3,assert|true q,Nm0|Fld|Eq2|IntEx1,0 i,Nm1|Plus1|Cal|Eq|Fld0|Nm2,size ),StrEx1|Plus1|Cal|Ex|Bk|Ex|Cal0|Eq|Nm0,size j,Nm0|PosInc|For|Bk|Ex|Cal0|Plus|Plus|Nm1,i integer,Prim0|VDE|VD|Cal1|Nm0,q i,Nm1|Ls|For|Bk|For|Bk|Ex|Cal0|Nm0,q j,Nm0|PosInc|For|Bk|Ex|Cal0|Plus|StrEx1,) 0,IntEx1|Eq2|Cal|Nm3,assert|true j,VDID0|VD|VDE|For|Bk|For|Ls|Nm1,i 0,IntEx1|Neq|If|Bk|Ex|Cal0|Plus|Plus|Nm1,i j,VDID0|VD|IntEx1,0 q,Nm0|Fld|Eq2|Cal|Ex|Bk|For|PosInc|Nm0,i int,Prim0|VDE|For|Bk|Ex|Cal0|Nm3,add|first but|is,StrEx1|Plus|Plus|Plus|Plus|Plus1|Cal|Eq|Nm0,pop j,Nm0|PosInc|For|Bk|For|Ls|Nm0,j i,Nm1|Ls|For|Bk|Ex|Cal0|Eq|IntEx1,0 size,Nm1|Plus|Plus|Plus|Plus1|StrEx1,) 0,IntEx1|VD|VDE|For|Bk|For|VDE|VD|IntEx1,0 but|is,StrEx1|Plus|Plus|Plus|Plus|Nm1,i int,Prim0|VDE|For|Bk|Ex|Cal0|Eq|IntEx1,0 failed|to|add|element,StrEx0|Plus|Plus|Plus|Plus1|StrEx1,) but|is,StrEx1|Plus|Plus|Nm1,size integer,Prim0|VDE|Ex|Bk|Ex|VDE|VD|Fld1|Nm2,size j,Nm0|PosInc|For|Bk|For|Bk|Ex|Cal0|Nm3,assert|true j,Nm0|Ls|For|Bk|For|Bk|Ex|Cal0|Nm0,q 0,IntEx1|VD|VDE|For|Bk|Ex|Cal0|Plus|StrEx1,) 0,IntEx1|VD|VDE|For|Bk|Ex|Cal0|Nm3,assert|true 0,IntEx1|Neq|If|Bk|For|Bk|For|PosInc|Nm0,i assert|true,Nm3|Cal|Ex|Bk|Ex|Cal0|Plus|Plus|Nm1,i i,Nm0|PosInc|For|Bk|If|Bk|Ex|Cal0|Nm3,assert|true 0,IntEx1|Neq|If|Bk|Ex|VDE|VD|Cal1|Nm0,q void,Void1|Mth|Bk|For|Bk|Ex|Cal0|IntEx2,<NUM> 0,IntEx1|VD|VDE|For|Bk|If|Neq|IntEx1,0 size,Nm1|Plus|Plus|StrEx1,( i,Nm1|Plus|Plus1|Cal|Eq|Nm1,j int,Prim0|VDE|For|Bk|For|Bk|Ex|VDE|Prim0,int j,VDID0|VD|VDE|For|Bk|If|Neq|IntEx1,0 i,Nm0|Ls|For|VDE|VD|VDID0,i new|deque|is|not|empty,StrEx1|Cal|Eq|Fld0|Nm0,q 0,IntEx1|Eq2|Cal|Ex|Bk|For|VDE|Prim0,int size,Nm2|Fld|Eq2|IntEx1,0 integer,Prim0|VDE|Ex|Bk|For|Bk|For|Ls|Nm1,i i,VDID0|VD|VDE|For|Bk|For|VDE|Prim0,int j,Nm0|PosInc|For|Bk|Ex|Cal0|Plus|StrEx1,) j,Nm0|PosInc|For|Bk|Ex|VDE|VD|VDID0,pop not|empty|after|cycle,StrEx0|Plus1|Cal|Eq|Fld0|Nm0,q j,Nm2|Cal2|Cal|Ex|Bk|Ex|Cal0|Eq|Nm0,size i,Nm1|Ls|For|Bk|For|Bk|Ex|VDE|Prim0,integer size,VDID0|VD|Fld1|Nm0,q 1,IntEx1|Plus|Enc|Plus|Plus|Plus|Nm1,size void,Void1|Mth|Bk|For|Ls|IntEx1,<NUM> pop,VDID0|VD|Cal1|Nm0,q integer,Prim0|VDE|Ex|Bk|Ex|Cal0|Nm3,assert|true assert|true,Nm3|Cal|Ex|Bk|Ex|Cal0|Plus|Plus|Nm1,i size,Nm2|Fld|Eq2|Cal|Ex|Bk|For|VDE|Prim0,int j,Nm1|Plus|Plus|Plus|Plus1|Cal|Nm2,fail add|first,Nm3|Cal|Ex|Bk|Try|Catch|Prm|Cls1,illegal|state|exception (,StrEx1|Plus|Plus|Plus1|StrEx1,) 0,IntEx1|VD|VDE|For|Bk|Ex|Cal0|Nm3,assert|true METHOD_NAME,Nm2|Mth|Bk|For|Bk|For|PosInc|Nm0,j j,Nm2|Cal2|Cal|Ex|Bk|Ex|Cal0|Nm3,assert|true add|first,Nm3|Cal|Ex|Bk|Try|Catch|Prm|VDID0,e j,Nm0|Ls|For|Bk|For|Ls|Nm1,i i,Nm1|Ls|For|Bk|For|Bk|For|PosInc|Nm0,i i,Nm1|Plus|Plus1|Cal|Cal2|Nm0,peeked size,Nm2|Fld|VD|VDE|Ex|Bk|Ex|Cal0|Nm3,assert|true 0,IntEx1|VD|VDE|For|Bk|Ex|Cal0|Nm0,q size,Nm0|Eq2|Plus|Nm0,j i,Nm0|Ls|For|Bk|Ex|Cal0|Nm0,q size,Nm2|Fld|Eq2|Cal|Nm3,assert|true 0,IntEx1|Eq2|Cal|Ex|Bk|For|VDE|Prim0,int 1,IntEx1|Minus|Minus|Nm1,j i,Nm0|PosInc|For|Bk|Ex|Cal0|Nm0,q i,Nm1|Plus|Plus1|Cal|Nm3,assert|true i,Nm0|Minus|Minus|Nm1,j i,Nm1|Ls|For|Bk|For|Bk|Ex|Cal0|Nm3,assert|true peeked,Nm0|Cal2|Cal|Ex|Bk|Ex|Cal0|Eq|Nm0,size integer,Prim0|VDE|Ex|Bk|If|Bk|Ex|Cal0|Nm3,assert|true assert|true,Nm3|Cal|Ex|Bk|For|Bk|Ex|Cal0|Nm3,add|first j,Nm0|Ls|For|Bk|Ex|Cal0|Nm3,assert|true peeked,VDID0|VD|VDE|Ex|Bk|Ex|Cal0|Cal2|Nm2,j 0,IntEx1|VD|VDE|For|Bk|Ex|Cal0|Nm3,assert|true not|empty|after|cycle,StrEx0|Plus1|Cal|Nm3,assert|true int,Prim0|VDE|For|Bk|For|VDE|VD|VDID0,j 0,IntEx1|VD|VDE|For|PosInc|Nm0,j i,Nm1|Plus|Plus1|Cal|Nm3,assert|true i,Nm1|Plus|Plus1|Cal|Eq|Nm0,pop

replace|escape|chars int,Prim0|VDE|Ex|Bk|If|Gt|Nm0,escaped 0,IntEx1|Gt|If|Bk|Do|Bk|Ex|Cal0|CharEx2,{ \,CharEx1|Eq|If|If|Bk|Ex|VDE|VD|VDID0,j int,Prim0|VDE|Ex|Bk|If|Bk|Ex|Cal0|Nm2,ch string,Cls1|Prm|Mth|Bk|For|VDE|VD|IntEx1,0 j,VDID0|VD|Plus|Nm0,i int,Prim0|VDE|Ex|Bk|For|Ls|Nm0,i boolean,Prim0|VDE|Ex|Bk|For|VDE|VD|IntEx1,0 ch,VDID0|VD|VDE|Ex|Bk|If|If|Eq|Nm0,ch escaped,VDID0|VD|VDE|Ex|Bk|If|Gt|IntEx1,0 ch,Nm0|Eq|If|If|Bk|Ex|Cal0|Nm0,buffer i,Nm0|PosInc|For|Bk|If|Bk|Ex|Cal0|Nm3,append ch,VDID0|VD|Cal1|Nm0,pattern len,VDID0|VD|VDE|Ex|Bk|For|Ls|Nm1,len pattern,VDID0|Prm|Mth|Bk|For|VDE|VD|IntEx1,0 pattern,VDID0|Prm|Mth|Bk|Ret|Cond|Cal1|Nm0,buffer ch,Nm0|Eq|If|If|Bk|Ex|As0|Minus|Nm0,j string,Cls1|Prm|Mth|Bk|Ex|Cal0|Nm0,buffer pattern,VDID0|Prm|Mth|Bk|Ret|Cond|Cal1|Nm2,to|string \,CharEx1|Eq|If|If|Bk|Ex|Cal0|Nm3,append buffer,Nm0|Cal|Nm2,to|string i,Nm0|PosInc|For|Bk|If|Bk|Ex|As0|BoolEx1,true int,Prim0|VDE|Ex|Bk|If|Ex|Cal0|Nm3,append string,Cls1|Prm|Mth|Bk|Ex|Cal0|IntEx2,0 {,CharEx2|Cal|Ex|Bk|Do|Bk|Ex|Cal0|CharEx2,\ int,Prim0|VDE|Ex|Bk|If|Bk|Ex|Cal0|CharEx2,\ char,Prim0|VDE|Ex|Bk|If|Bk|Ex|Cal0|StrEx2,BLANK char,Prim0|VDE|VD|Cal1|Nm3,char|at int,Prim0|VDE|Ex|Bk|For|Bk|If|Eq|CharEx1,\ buffer,Nm0|Cal|Ex|Bk|If|Bk|If|Neq|IntEx1,0 int,Prim0|VDE|VD|Plus|IntEx1,1 int,Prim0|VDE|Ex|Bk|Ex|VDE|Prim0,int 0,IntEx1|Gt|If|Bk|If|Neq|Mod|IntEx1,<NUM> METHOD_NAME,Nm1|Mth|Bk|For|VDE|Prim0,int 0,IntEx1|Gt|If|Bk|Ex|As0|BoolEx1,true int,Prim0|VDE|Ex|Bk|Ret|Cond|Nm2,pattern {,CharEx1|Eq|If|Bk|If|Gt|IntEx1,0 int,Prim0|VDE|Ex|Bk|If|Neq|IntEx1,0 int,Prim0|VDE|VD|VDID0,i <NUM>,IntEx1|Div|VD|VDE|Ex|Bk|If|Gt|IntEx1,0 \,CharEx1|Eq|If|If|Bk|If|Gt|IntEx1,0 char,Prim0|VDE|VD|Cal1|Nm0,pattern i,VDID0|VD|VDE|For|Bk|If|If|Eq|Nm0,ch i,Nm0|PosInc|For|Bk|If|Bk|Ex|As0|Nm0,changed 0,IntEx2|Cal|Nm3,set|length pattern,Nm0|Cal|VD|VDE|Ex|Bk|Ret|Cond|Nm2,pattern 0,IntEx1|Neq|If|Bk|Ex|As0|Nm0,i \,CharEx2|Cal|Ex|Bk|Do|Gt|Enc|PreDec|Nm0,escaped set|length,Nm3|Cal|Ex|Bk|Ex|VDE|VD|Cal1|Nm0,pattern j,Nm0|Minus|Enc|Mod|Neq|If|Ex|Cal0|Nm3,append int,Prim0|VDE|Ex|Bk|If|Ex|Cal0|CharEx2,{ int,Prim0|VDE|VD|VDID0,j buffer,Nm0|Cal|Ex|Bk|Ex|Cal0|Nm3,append METHOD_NAME,Nm1|Mth|Bk|For|VDE|VD|VDID0,i 0,IntEx1|Gt|If|Bk|Do|Bk|Ex|Cal0|Nm0,buffer i,Nm0|Plus|VD|VDE|Ex|Bk|Ex|VDE|Prim0,int append,Nm3|Cal|Ex|Bk|Do|Bk|Ex|Cal0|Nm0,buffer false,BoolEx1|VD|VDE|Ex|Bk|Ex|VDE|VD|VDID0,len int,Prim0|VDE|For|Bk|Ret|Cond|Nm0,changed escaped,VDID0|VD|VDE|Ex|Bk|If|Neq|IntEx1,0 \,CharEx2|Cal|Ex|Bk|Do|Bk|Ex|Cal0|CharEx2,{ \,CharEx1|Eq|If|Bk|Ex|Cal0|Nm0,buffer string,Cls0|Mth|Nm1,METHOD_NAME {,CharEx2|Cal|Ex|Bk|Do|Gt|IntEx1,0 \,CharEx1|Eq|If|If|Bk|Ex|VDE|Prim0,int len,Nm1|Ls|For|VDE|Prim0,int 0,IntEx1|Gt|If|Bk|If|Ex|Cal0|Nm3,append \,CharEx1|Eq|If|Bk|For|Bk|Ret|Cond|Nm0,changed int,Prim0|VDE|Ex|Bk|While|And|Eq|Cal0|Nm3,char|at changed,Nm0|As|Ex|Bk|Ex|Cal0|Nm3,append \,CharEx2|Cal|Nm3,append buffer,Nm0|Cal|Ex|Bk|If|Bk|Ex|As0|Nm0,i changed,Nm0|As|Ex|Bk|If|Bk|If|Neq|IntEx1,0 buffer,Nm0|Cal|Ex|If|Bk|Ex|As0|Nm0,i 0,IntEx1|VD|VDE|For|Bk|If|If|Eq|CharEx1,{ \,CharEx1|Eq|If|If|Bk|While|And|Eq|CharEx1,{ {,CharEx1|Eq|If|Bk|If|Ex|Cal0|Nm3,append escaped,Nm0|Gt|If|Bk|Ex|Cal0|Nm3,append \,CharEx1|Eq|If|If|Bk|While|Ex|PosInc|Nm0,j int,Prim0|VDE|Ex|Bk|If|Bk|Ex|Cal0|Nm3,append i,Nm1|Minus|Enc|Mod|Neq|If|Ex|Cal0|Nm3,append ch,Nm0|Eq|If|Bk|If|Bk|Ex|Cal0|Nm0,buffer ch,Nm0|Eq|If|Bk|Ex|As0|Minus|IntEx1,1 j,Nm0|Ls|And|Eq|Cal0|Nm0,pattern pattern,Nm0|Cal|VD|VDE|Ex|Bk|For|Ls|Nm0,i append,Nm3|Cal|Ex|Bk|Do|Gt|IntEx1,0 string,Cls1|Prm|Mth|Bk|For|VDE|VD|VDID0,i ch,Nm0|Eq|If|Bk|Ex|Cal0|Nm0,buffer METHOD_NAME,Nm1|Mth|Bk|Ret|Cond|Nm2,pattern int,Prim0|VDE|VD|VDID0,len {,CharEx1|Eq|If|Bk|Ex|Cal0|Nm2,ch string,Cls1|Prm|Mth|Bk|Ex|VDE|VD|Cal1|Nm2,length j,Nm2|Cal|Eq|CharEx1,{ ch,Nm0|Eq|If|If|Bk|If|Ex|Cal0|Nm3,append changed,VDID0|VD|BoolEx1,false METHOD_NAME,Nm1|Mth|Bk|For|VDE|VD|IntEx1,0 {,CharEx1|Eq|If|Bk|If|Bk|Ex|As0|BoolEx1,true boolean,Prim0|VDE|VD|BoolEx1,false escaped,VDID0|VD|VDE|Ex|Bk|If|Ex|Cal0|Nm0,buffer pattern,VDID0|Prm|Mth|Bk|Ex|VDE|VD|VDID0,len boolean,Prim0|VDE|Ex|Bk|For|Ls|Nm0,i METHOD_NAME,Nm1|Mth|Bk|Ex|Cal0|IntEx2,0 escaped,Nm0|Gt|If|Bk|If|Bk|Ex|Cal0|Nm0,buffer 0,IntEx1|VD|VDE|For|Bk|Ex|VDE|VD|VDID0,ch ch,Nm0|Eq|If|If|Bk|If|Neq|IntEx1,0 int,Prim0|VDE|For|Bk|If|Bk|Ex|Cal0|StrEx2,BLANK pattern,VDID0|Prm|Mth|Bk|For|Ls|Nm1,len pattern,VDID0|Prm|Mth|Bk|Ret|Cond|Nm0,changed buffer,Nm0|Cal|Ex|Bk|If|Bk|Ex|As0|Nm0,i ch,Nm0|Eq|If|Bk|While|And|Eq|Cal0|Nm2,j {,CharEx1|Eq|If|Bk|While|And|Eq|Cal0|Nm2,j len,VDID0|VD|Cal1|Nm0,pattern {,CharEx2|Cal|Nm3,append <NUM>,IntEx1|Div|VD|VDE|Ex|Bk|If|Neq|IntEx1,0 append,Nm3|Cal|Ex|Bk|If|If|Eq|Nm0,ch escaped,VDID0|VD|VDE|Ex|Bk|If|Gt|Nm0,escaped changed,VDID0|VD|VDE|Ex|Bk|For|VDE|Prim0,int changed,Nm0|Cond|Cal1|Nm0,buffer len,VDID0|VD|VDE|Ex|Bk|For|Ls|Nm0,i changed,VDID0|VD|VDE|Ex|Bk|For|VDE|VD|IntEx1,0 pattern,Nm0|Cal|Nm2,i i,Nm0|PosInc|For|Bk|If|If|Eq|CharEx1,{ ch,Nm0|Eq|If|Bk|While|And|Ls|Nm0,j append,Nm3|Cal|Ex|Bk|If|Bk|If|Neq|IntEx1,0 append,Nm3|Cal|Ex|Bk|Ex|Cal0|Nm0,buffer \,CharEx2|Cal|Ex|Bk|Ex|Cal0|CharEx2,\ boolean,Prim0|VDE|Ex|Bk|Ex|VDE|VD|Cal1|Nm0,pattern append,Nm3|Cal|Ex|Bk|Do|Gt|IntEx1,0 {,CharEx1|Eq|If|Bk|Ex|As0|Minus|Nm0,j changed,Nm0|As|Ex|Bk|Do|Gt|Enc|PreDec|Nm0,escaped len,VDID0|VD|VDE|Ex|Bk|Ret|Cond|Cal1|Nm0,buffer \,CharEx2|Cal|Nm3,append 0,IntEx1|Gt|If|Bk|If|Bk|Ex|Cal0|Nm0,buffer ch,Nm0|Eq|If|Bk|If|Gt|IntEx1,0 len,Nm1|Ls|And|While|Bk|If|Gt|IntEx1,0 METHOD_NAME,Nm1|Mth|Bk|Ret|Cond|Cal1|Nm0,buffer escaped,Nm0|Gt|If|Bk|Ex|Cal0|Nm3,append {,CharEx1|Eq|If|Bk|While|And|Eq|Cal0|Nm0,pattern METHOD_NAME,Nm1|Mth|Bk|Ret|Cond|Nm0,changed 0,IntEx2|Cal|Ex|Bk|Ex|VDE|Prim0,int i,Nm0|PosInc|For|Bk|Ret|Cond|Cal1|Nm0,buffer pattern,VDID0|Prm|Mth|Bk|Ex|VDE|VD|Cal1|Nm2,length ch,Nm0|Eq|If|If|Bk|While|And|Eq|CharEx1,{ int,Prim0|VDE|Ex|Bk|If|Bk|Ex|Cal0|Nm3,append int,Prim0|VDE|For|Bk|If|Eq|CharEx1,\ \,CharEx1|Eq|If|If|Bk|If|Ex|Cal0|Nm3,append len,Nm1|Ls|And|While|Ex|PosInc|Nm0,j int,Prim0|VDE|Ex|Bk|For|VDE|VD|VDID0,i j,Nm0|Minus|Nm1,i int,Prim0|VDE|Ex|Bk|If|Bk|Ex|Cal0|CharEx2,\ i,Nm2|Cal|Nm3,char|at buffer,Nm0|Cal|Ex|Bk|Do|Gt|IntEx1,0 pattern,VDID0|Prm|Mth|Bk|For|Ls|Nm0,i changed,Nm0|As|Ex|Bk|Ex|Cal0|Nm3,append changed,Nm0|As|Ex|Bk|Ex|Cal0|StrEx2,BLANK ch,Nm2|Cal|Nm3,append len,Nm1|Ls|And|While|Bk|If|Gt|Nm0,escaped set|length,Nm3|Cal|Ex|Bk|Ex|VDE|VD|Cal1|Nm2,length len,Nm1|Ls|For|VDE|VD|IntEx1,0 buffer,Nm0|Cal|Ex|Bk|Do|Gt|Enc|PreDec|Nm0,escaped \,CharEx2|Cal|Ex|Bk|Do|Gt|IntEx1,0 i,VDID0|VD|VDE|For|Bk|If|If|Eq|CharEx1,{ int,Prim0|VDE|For|Bk|If|If|Eq|Nm0,ch int,Prim0|VDE|VD|Div|Enc|Minus|Nm0,j int,Prim0|VDE|For|Bk|Ex|VDE|Prim0,char ch,Nm0|Eq|If|If|Bk|If|Gt|Nm0,escaped METHOD_NAME,Nm1|Mth|Prm|VDID0,pattern true,BoolEx1|As|Ex|Bk|If|Bk|Ex|As0|Nm0,i i,Nm0|PosInc|For|Bk|Ex|VDE|VD|Cal1|Nm3,char|at ch,Nm0|Eq|If|Bk|While|And|Eq|Cal0|Nm0,pattern 0,IntEx1|Neq|If|Ex|Cal0|CharEx2,{ 1,IntEx1|Plus|VD|VDE|Ex|Bk|Ex|VDE|Prim0,int j,Nm0|PosInc|Ex|While|Bk|If|Gt|Nm0,escaped i,Nm0|PosInc|For|Bk|Ret|Cond|Nm2,pattern char|at,Nm3|Cal|VD|VDE|Ex|Bk|If|Eq|Nm0,ch buffer,Nm0|Cal|Ex|Bk|Do|Bk|Ex|Cal0|Nm0,buffer {,CharEx1|Eq|If|Bk|Ex|VDE|Prim0,int int,Prim0|VDE|VD|Plus|Nm0,i 0,IntEx1|Gt|Do|Bk|Ex|Cal0|CharEx2,\ len,VDID0|VD|VDE|Ex|Bk|For|VDE|VD|VDID0,i char,Prim0|VDE|Ex|Bk|If|Eq|CharEx1,\ length,Nm2|Cal|VD|VDE|Ex|Bk|For|Ls|Nm0,i pattern,VDID0|Prm|Mth|Bk|Ex|Cal0|Nm0,buffer int,Prim0|VDE|For|Bk|Ex|VDE|VD|VDID0,ch \,CharEx1|Eq|If|Bk|Ex|As0|Nm0,changed string,Cls1|Prm|Mth|Bk|For|VDE|Prim0,int int,Prim0|VDE|Ex|Bk|While|And|Eq|Cal0|Nm0,pattern ch,Nm0|Eq|If|Bk|If|Bk|Do|Gt|IntEx1,0 {,CharEx1|Eq|If|Bk|If|Ex|Cal0|Nm0,buffer int,Prim0|VDE|Ex|Bk|If|Bk|Ex|Cal0|Nm0,buffer changed,VDID0|VD|VDE|Ex|Bk|For|Ls|Nm1,len boolean,Prim0|VDE|Ex|Bk|For|Bk|Ex|VDE|Prim0,char true,BoolEx1|As|Ex|Bk|Ex|Cal0|StrEx2,BLANK 0,IntEx1|Gt|Do|Bk|If|Bk|If|Neq|IntEx1,0 0,IntEx2|Cal|Ex|Bk|Ex|VDE|VD|VDID0,changed string,Cls1|Prm|Mth|Bk|Ex|VDE|Prim0,int {,CharEx1|Eq|If|Bk|If|Gt|Nm0,escaped i,Nm2|Cal|VD|VDE|Ex|Bk|If|Eq|Nm0,ch int,Prim0|VDE|Ex|Bk|If|Gt|IntEx1,0 escaped,Nm0|Gt|If|Bk|Do|Gt|IntEx
